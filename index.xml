<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sam Robbins' Website on Sam Robbins</title><link>https://samrobbins.uk/</link><description>Recent content in Sam Robbins' Website on Sam Robbins</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 19 Oct 2017 15:26:15 +0000</lastBuildDate><atom:link href="https://samrobbins.uk/index.xml" rel="self" type="application/rss+xml"/><item><title>CV CLI</title><link>https://samrobbins.uk/portfolio/cv-cli/</link><pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/cv-cli/</guid><description>This was initially inspired by a project I saw on dev.to to create a personal npm card, this was a great project, and I followed it through and loved the result, but thought I could expand on the idea.
If you look at my portfolio you can see I like to experiment with different ways to make and present a CV, so I thought this could add to that theme by creating a npm CV.</description></item><item><title>Next.js Open Graph Image</title><link>https://samrobbins.uk/portfolio/next.js-open-graph-image/</link><pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/next.js-open-graph-image/</guid><description>This project was heavily inspired byog-image, but I wanted to change it in a couple ways. For one the original architecture was somewhat confusing, so I wanted to write it in a way that makes it easy for me to customize it. I also wanted to make it with Next.js, which allows for greater expandability in the future
API The place to start was the API, made easy with Next.js as you can just place the functions in the api folder.</description></item><item><title>Publishing a React component library with Tailwind CSS</title><link>https://samrobbins.uk/blog/publishing-a-react-component-library-with-tailwind-css/</link><pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/blog/publishing-a-react-component-library-with-tailwind-css/</guid><description>First you need to make an npm package, this can be done with npm init provided you have npm installed on your computer. For the name if you want a scoped package, e.g. @samrobbins/package, ensure that the package name follows that structure, otherwise, you can just go with package. Remember that these have to be unique, so check npm to ensure you&amp;rsquo;re not overlapping. Also ensure that your main key is output.</description></item><item><title>Colour accessibility test for Tailwind CSS</title><link>https://samrobbins.uk/portfolio/colour-accessibility-test-for-tailwind-css/</link><pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/colour-accessibility-test-for-tailwind-css/</guid><description>I&amp;rsquo;m a big fan of Tailwind CSS, in part for it giving an already set up colour scheme. But one thing I&amp;rsquo;ve fallen foul of in the past is using the colours in a way that is accessible. The gradients are already set up in a way that gives you a good estimate as around 700+ on white will be accessible and around less than 500 on white.
However, this changes between the different colours, so I wanted to build a site which showed the accessibility scores for all the colours, making it easy to see which ones to use.</description></item><item><title>Web App Tools</title><link>https://samrobbins.uk/portfolio/web-app-tools/</link><pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/web-app-tools/</guid><description>This was a nice simple side project inspired by a task I did as part of a hackathon organising team. I was to create a list of technologies that hackers could use in creating their hack, and so this expands on this idea.
The way I used Hugo for this project was different to how Hugo websites are usually built, in that most of the content is in the frontmatter. I could have used markdown tables instead, but I got greater control by programatically producing the table using data from the frontmatter.</description></item><item><title>CV Generator</title><link>https://samrobbins.uk/portfolio/cv-generator/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/cv-generator/</guid><description>For this project, I started with the template from magic labs, this allowed me to make sure that my connection to the database and authentication was set up correctly.
Next, I converted the CSS over to use Tailwind CSS, this allowed me to better understand the layout of the application and make changes to designs faster and without unexpected consequences.
The original database structure had two collections, users, and tasks, however, for this project, all the information was related to one user.</description></item><item><title>CV Theme</title><link>https://samrobbins.uk/portfolio/cv-theme/</link><pubDate>Sat, 19 Sep 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/cv-theme/</guid><description>For a long time my CV had been produced using LaTeX. This is one of the things LaTeX is designed for as typesetting is very important for a CV. However it had recently been causing frustration as the design wasn&amp;rsquo;t nearly as customisable as the websites I was creating. Also inserting content was tricky as some markup also had to be included, making it more difficult than websites I was producing in Hugo where I could import data from a .</description></item><item><title>Adding captions to images in MDX</title><link>https://samrobbins.uk/blog/adding-captions-to-images-in-mdx/</link><pubDate>Mon, 14 Sep 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/blog/adding-captions-to-images-in-mdx/</guid><description>Using MDX you can overwrite the default components that are provided by markdown. In this blog I will use this to add captions to images.
The first thing to do is to look at the table of components for MDX, and here we can see that images are represented by img. By following the link we can see the markdown
![alpha](https://example.com/favicon.ico &amp;#34;bravo&amp;#34;) Yields the following items
{ type: &amp;#39;image&amp;#39;, url: &amp;#39;https://example.</description></item><item><title>My Proposal for the GNOME Community Engagement Challenge</title><link>https://samrobbins.uk/writing/my-proposal-for-the-gnome-community-engagement-challenge/</link><pubDate>Mon, 14 Sep 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/writing/my-proposal-for-the-gnome-community-engagement-challenge/</guid><description>This document is submitted in addition to my proposal to provide further detail
This project will aim to train people from zero experience in programming or open source to making contributions to FOSS projects.
Stages This project will consist of a range of stages for the user to go through, I will explain them in more detail
Learning Languages This project will assume zero knowledge, making it accessible for all users.</description></item><item><title>DNS Comparison Website</title><link>https://samrobbins.uk/portfolio/dns-comparison-website/</link><pubDate>Thu, 03 Sep 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/dns-comparison-website/</guid><description>This site compares the performance of different DNS services. It does this in a range of ways, depending on your requirements.
Single domain comparison The homepage allows you to compare a single domain to see if it is resolved on different services. To do this it makes DNS over HTTPS requests using Axios, with a modifier to also include the latency.
Bulk domain comparison If you have a list of domains you want to compare, then the above method may become tedious as you have to type in every domain and check the results.</description></item><item><title>Intel vPro Detector</title><link>https://samrobbins.uk/portfolio/intel-vpro-detector/</link><pubDate>Thu, 03 Sep 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/intel-vpro-detector/</guid><description>This tool was produced to detect the presence of Intel vPro and the status of Intel AMT. Intel vPro is a collection of security features included in Intel processors. One of these features is Intel AMT, this allows for remote access from the BIOS level, meaning it can be recovered from more serious failures.
I initially wrote this tool in Golang as a proof of concept. This was functional, but suffered from two major problems.</description></item><item><title>Notes Website</title><link>https://samrobbins.uk/portfolio/notes-website/</link><pubDate>Sun, 30 Aug 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/notes-website/</guid><description>Content format The format I chose for the content is MDX, I had heard good things about it, and used it a bit when contributing to the Vercel documentation. It allows me to use standard markdown syntax but also allows for adding in JSX components. Another benefit is that it uses Remark and Rehype for markdown processing, allowing for the use of the wide range of plugins.
Plugins I use the rehype plugin @mapbox/rehype-prism to add Prism syntax highlighting to the content, I use the prism-atom-dark theme.</description></item><item><title>Remark Admonitions Styles</title><link>https://samrobbins.uk/portfolio/tailwind-remark-admonitions/</link><pubDate>Mon, 17 Aug 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/tailwind-remark-admonitions/</guid><description>This was a small project I produced while working on my university notes website. The problem I was facing is that the new CSS for remark admonitions is produced with Infima, a CSS framework only used by Docusaurus. My aim was to build these same styles using Tailwind CSS, a much more popular framework, and one that allows compiling to raw CSS.
I did this for the classic style and like how they look, however I decided to move to a solution built with React components and so didn&amp;rsquo;t progress to make more styles, but I may in the future.</description></item><item><title>Easy DMARC</title><link>https://samrobbins.uk/portfolio/easy-dmarc/</link><pubDate>Sat, 08 Aug 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/easy-dmarc/</guid><description>About This application sets up DMARC on your Vercel domains, and in the process also sets up SPF. In combination, these secure your domain by protecting you from fraud as it is much more difficult for people to send emails pretending to be your domain.
The impact of this for domain owners is that people won&amp;rsquo;t regard emails from them as spam if criminals are sending fraudulent emails pretending to be them.</description></item><item><title>Google AIY Emotion Detection</title><link>https://samrobbins.uk/portfolio/google-aiy-emotion-detection/</link><pubDate>Sat, 01 Aug 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/google-aiy-emotion-detection/</guid><description>This project started with assembling the Google AIY Vision Kit, this was very enjoyable and gave me a good insight into what makes up the device.
This code is a fork of the Google example face_camera_detection.
Building on top of this example, I created a counter, which allowed me to keep track of how consistently happy or sad the face in the frame is.
if avg_joy_score(faces) &amp;gt; 0.8: if joy_counter &amp;lt; 0: joy_counter = 0 else: joy_counter += 1 if avg_joy_score(faces) &amp;lt; 0.</description></item><item><title>Hugo versions in hosting</title><link>https://samrobbins.uk/blog/hugo-versions-in-hosting/</link><pubDate>Fri, 26 Jun 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/blog/hugo-versions-in-hosting/</guid><description>I recently wanted to add some syntax highlighting to my Hugo theme, a simple enough task right? Hop over onto the Hugo documentation here and change the config file. I then ran hugo server to check everything was working, and it was looking wonderful
So what&amp;rsquo;s the problem? I wanted to deploy it. I use Vercel hosting for all my projects, which is fantastic and as you will see, this is more an oversight on my part than their fault.</description></item><item><title>Hugo Portfolio Website</title><link>https://samrobbins.uk/portfolio/hugo-portfolio-website/</link><pubDate>Fri, 19 Jun 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/hugo-portfolio-website/</guid><description>I created my portfolio website using Hugo and UIKit, it serves as an online resume containing all my work.
This has been created as a theme so that others can use and adapt it.
Sections Homepage Homepage Screenshot The homepage provides the basic information about you, including links to social media, skills you have, things you&amp;rsquo;ve done and your education. This page makes good use of UIKit grid and cards for organising all the information and ensuring it is responsive to work on mobile devices.</description></item><item><title>Same Home Different Hacks</title><link>https://samrobbins.uk/portfolio/same-home-different-hacks/</link><pubDate>Thu, 11 Jun 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/same-home-different-hacks/</guid><description>In this project we made an Android app to keep track of electronic components.
Installation The code can be found here https://github.com/samrobbins85/locatemytech, it can be downloaded with
git clone https://github.com/samrobbins85/locatemytech.git We haven&amp;rsquo;t built the packages for this, so you will have to build it yourself using Flutter, instructions can be found here https://flutter.dev/docs/get-started/install.
Pages Homepage When you open the app, you are greeted with the following page
This allows you to see all the components you have.</description></item><item><title>Oxford Digithon</title><link>https://samrobbins.uk/portfolio/oxford-digithon/</link><pubDate>Sat, 30 May 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/oxford-digithon/</guid><description>For this project we created a web browser extension designed to make you less productive. It did this by making productive websites difficult to use and directing you away from them. You can see our demonstration video here:
This was created using the WebExtensions API so should be compatible with browsers other than Mozilla Firefox, but all our testing was done on that.
Installation To install, first download the project from the GitHub linked at the top of the page</description></item><item><title>Conway's Game of Life</title><link>https://samrobbins.uk/portfolio/conway-s-game-of-life/</link><pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/conway-s-game-of-life/</guid><description>For this coursework we were to implement Conway&amp;rsquo;s Game of Life in C. This consists of a DLL and a program that calls the library for key functionality.
Dynamically Linked Library This was to implement a range of functions
read_in_file() reads in the file from the filepointer infile and stores the universe in the structure pointed to by u. You must use dynamic memory allocation. write_out_file() writes the content of the universe pointed to by u into the file from the file pointer outfile is_alive returns 1 if the cell in that column and row is alive and 0 otherwise will_be_alive() returns 1 if that cell in that column and row will be alive in the next generation and 0 otherwise, assuming that cells outside the universe are always dead will_be_alive_torus() returns 1 if the cell in that column and row will be alive in the next generation and 0 otherwise, assuming a torus topology evolve() changes the universe from the current generation to the next generation.</description></item><item><title>A report on Non-Local Means Denoising</title><link>https://samrobbins.uk/writing/image_processing/</link><pubDate>Mon, 20 Jan 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/writing/image_processing/</guid><description>A description of the non-local means denoising algorithm 1 Non local means denoising uses samples from all around the image, instead of conventional denoising which will just look at the area around the given pixel to increase the accuracy of the colour. The reason it does this is due to the fact that patterns and shapes will be repeated in images, meaning that there will likely be an area somewhere else in the image that looks very similar to the patch around the pixel looking to be corrected.</description></item><item><title>AI Search</title><link>https://samrobbins.uk/portfolio/ai-search/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/ai-search/</guid><description>For this project we were to implement two algorithms for solving the travelling salesman problem.
I decided to implement Christofides algorithm and a Greedy Algorithm.
Greedy algorithm The basic greedy algorithm selects the next node with the lowest cost. However I enhanced this as there was indecision when there were multiple minimums to choose from as it couldn&amp;rsquo;t be determined which was best.
To solve this problem, my enhanced code looked ahead at what the cost would be of choosing the different choices, and chose the one that gave the lowest cost</description></item><item><title>Durhack 2019</title><link>https://samrobbins.uk/portfolio/durhack-2019/</link><pubDate>Wed, 01 Jan 2020 15:19:11 +0000</pubDate><guid>https://samrobbins.uk/portfolio/durhack-2019/</guid><description>Our project was to build a tool to help people with dementia remember things, this is implemented in various ways, as described below.
Capital One For this, we used the Capital One API to model new transactions coming in and checking if repeat payments are being made. This is done by checking the location and cost of the payment against the previous payments. The reason why this would be useful is that for people with dementia they may forget that they have already bought things, and so buy it again, wasting money.</description></item><item><title>Making a new Website</title><link>https://samrobbins.uk/blog/first-blog/</link><pubDate>Tue, 31 Dec 2019 12:14:34 +0600</pubDate><guid>https://samrobbins.uk/blog/first-blog/</guid><description>For a long time this website has had a couple of links to contact me, but those days are over.
Now I have a brand new Hugo website with a custom written theme complete with
A homepage with more social links, and description of my skills An about page with description of who I am A portfolio page to showcase all my projects A blog Why Hugo? The first question is why a site builder?</description></item><item><title>Bulletin Board</title><link>https://samrobbins.uk/portfolio/bulletin-board/</link><pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/bulletin-board/</guid><description>This coursework was to implement a client-server system for a simple anonymous bulletin board system using TCP.
This system makes heavy use of the socket Python library for communicating between the client and server. There is also a large amount of error checking involved to ensure that commands can be properly executed.
Error checking The following errors were checked for
Unavailable/busy port No message boards defined Specified board doesn&amp;rsquo;t exist Invalid message Logs The server program keeps logs of every request it receives during all client-server communication</description></item><item><title>Security Coursework</title><link>https://samrobbins.uk/portfolio/security-coursework/</link><pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/security-coursework/</guid><description>For this coursework we were to find vulnerabilities in a system and explain how they could be mitigated, along with solving a murder mystery in the system, which required finding and decoding a range of files.
Vulnerabilities Database file can be opened by any user There was a file in the database folder named Database.db, this could be opened using sqlite and with the command SELECT * FROM Users, you could find personal information on the users, such as passwords.</description></item><item><title>Bioinformatics</title><link>https://samrobbins.uk/portfolio/bioinformatics/</link><pubDate>Thu, 02 May 2019 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/bioinformatics/</guid><description>DNA Alignment This takes two DNA sequences and produces the optimal alignment. This is done by filling out a backtracking matrix.
This has a simple piece of driver code which loops through all the cells of the backtrack matrix
for a in range(1,len(seq1)+1): for b in range(1,len(seq2)+1): fill_cell(m,backtrack,seq1,seq2,a,b) The fill_cell function then determines the entry in the backtracking matrix and the maximum score of a matching
def fill_cell(m,backtrack,seq1,seq2,a,b): # Here m is the matrix and [b,a] is the location of the cell to fill out # Diagonal max=score(a,b,seq1,seq2)+m[b-1,a-1] pos=&amp;#39;D&amp;#39; # Up temp=m[b-1,a]-2 if temp&amp;gt;max: max=temp pos=&amp;#39;U&amp;#39; # Left temp=m[b,a-1]-2 if temp&amp;gt;max: max=temp pos=&amp;#39;L&amp;#39; m[b,a]=max backtrack[b,a]=pos return The rules for scoring were given in the assignment, and are implemented using the score function</description></item><item><title>Slate my doggo</title><link>https://samrobbins.uk/portfolio/slate-my-doggo/</link><pubDate>Wed, 01 May 2019 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/slate-my-doggo/</guid><description>This site has a simple user interface with two buttons. The show me a random doggo button will select a random image, and the associated comments. The gimme more doggos button fetches new images using the Reddit API.
API A REST API was implemented to allow for interfacing with the backend. The API was implemented with three functions
List This is a GET request which will give you the JSON of an image with the appropriate links</description></item><item><title>Modelling with Graphs</title><link>https://samrobbins.uk/portfolio/modelling-with-graphs/</link><pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/modelling-with-graphs/</guid><description>In this coursework I implemented a range of graph algorithms using Python and NetworkX.
Basic greedy colouring This can be found in the file Part A/greedy_col_basic.py
This is designed to:
Visit the vertices of the graph sequentially At every step assign in a greedy fashion the smallest possible colour Output the constructed colouring and the number of different colours in the colouring For this I implemented two functions</description></item><item><title>Error Correcting Codes</title><link>https://samrobbins.uk/portfolio/error-correcting-codes/</link><pubDate>Fri, 15 Feb 2019 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/error-correcting-codes/</guid><description>In this coursework I implemented a range of functions for different methods of error correcting codes
Hamming codes Message This function takes a vector and converted it to a message that can be used in a hamming code
def message(a): if not checkvalid(a): return [] l = len(a) r = 2 while (2 ** r - 2 * r - 1) &amp;lt; l: r += 1 k = 2 ** r - r - 1 length = list(bin(l)[2:]) length = [int(x) for x in length] length = [0] * (r - len(length)) + length end = [0] * (k - r - l) return length + a + end Hamming Encoder This acts as an encoder for hamming codes</description></item><item><title>p5 Component</title><link>https://samrobbins.uk/portfolio/p5-component/</link><pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/p5-component/</guid><description>In this coursework we were to take a p5 sketch from https://www.openprocessing.org/ and adapt it into a reusable component. For this I used the sketch https://www.openprocessing.org/sketch/429506. It looks like this:
Running This only needs an internet connection to request the various libraries involved, it can be ran by just opening the HTML file in your browser
Example functions Setup function setup() { createCanvas(windowWidth, windowHeight); rectMode(CENTER); textAlign(CENTER); textSize(14); colorMode(HSB); } Draw function draw() { let b = new shape(); b.</description></item><item><title>Algorithms and Data Structures</title><link>https://samrobbins.uk/portfolio/algorithms-and-data-structures/</link><pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/algorithms-and-data-structures/</guid><description>Hash Table The code for this algorithm can be found in Question 1/q1.py
This adds keys to a hash table of size 19 using the hash function defined by h(k)=6k+3 mod 19
In the first implementation hash_quadratic collisions are handled by probing
def hash_quadratic(d): #initialize table table = [&amp;#34;-&amp;#34;]*19 flag=0 #consider each integer k in the input for k in d: flag=0 #if k is already in the table this is a duplicate so move to next integer in the input #note this check for a duplicate is using the functionality of python rather than checking using a linear probe if k in table: continue #apply the hash function i = (6*k+3) % 19 init=i #initialize count that checks whether linear probe has considered each bucket and is now full count = 0 #while bucket is already filled while table[i] !</description></item><item><title>To what extent could Quantum Computers Improve On Classical Computers?</title><link>https://samrobbins.uk/writing/epq/</link><pubDate>Mon, 20 Nov 2017 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/writing/epq/</guid><description>Note that this was written during large development in Quantum Computers, and when I was in high school. Both of these to say this won&amp;rsquo;t be perfectly accurate
Introduction Quantum computing is a key concept in computing, as it is a method which allows for far faster computing, beyond the current limits of classical computing. My question is: to what extent could quantum computers improve on classical computers. I chose this topic because of its relevance to the future of computing and the impact it can have on the world.</description></item></channel></rss>