<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web-dev on Sam Robbins</title><link>https://samrobbins.uk/categories/web-dev/</link><description>Recent content in web-dev on Sam Robbins</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sun, 13 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://samrobbins.uk/categories/web-dev/index.xml" rel="self" type="application/rss+xml"/><item><title>CV CLI</title><link>https://samrobbins.uk/portfolio/cv-cli/</link><pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/cv-cli/</guid><description>This was initially inspired by a project I saw on dev.to to create a personal npm card, this was a great project, and I followed it through and loved the result, but thought I could expand on the idea.
If you look at my portfolio you can see I like to experiment with different ways to make and present a CV, so I thought this could add to that theme by creating a npm CV.</description></item><item><title>Next.js Open Graph Image</title><link>https://samrobbins.uk/portfolio/next.js-open-graph-image/</link><pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/next.js-open-graph-image/</guid><description>This project was heavily inspired byog-image, but I wanted to change it in a couple ways. For one the original architecture was somewhat confusing, so I wanted to write it in a way that makes it easy for me to customize it. I also wanted to make it with Next.js, which allows for greater expandability in the future
API The place to start was the API, made easy with Next.js as you can just place the functions in the api folder.</description></item><item><title>Colour accessibility test for Tailwind CSS</title><link>https://samrobbins.uk/portfolio/colour-accessibility-test-for-tailwind-css/</link><pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/colour-accessibility-test-for-tailwind-css/</guid><description>I&amp;rsquo;m a big fan of Tailwind CSS, in part for it giving an already set up colour scheme. But one thing I&amp;rsquo;ve fallen foul of in the past is using the colours in a way that is accessible. The gradients are already set up in a way that gives you a good estimate as around 700+ on white will be accessible and around less than 500 on white.
However, this changes between the different colours, so I wanted to build a site which showed the accessibility scores for all the colours, making it easy to see which ones to use.</description></item><item><title>Web App Tools</title><link>https://samrobbins.uk/portfolio/web-app-tools/</link><pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/web-app-tools/</guid><description>This was a nice simple side project inspired by a task I did as part of a hackathon organising team. I was to create a list of technologies that hackers could use in creating their hack, and so this expands on this idea.
The way I used Hugo for this project was different to how Hugo websites are usually built, in that most of the content is in the frontmatter. I could have used markdown tables instead, but I got greater control by programatically producing the table using data from the frontmatter.</description></item><item><title>CV Generator</title><link>https://samrobbins.uk/portfolio/cv-generator/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/cv-generator/</guid><description>For this project, I started with the template from magic labs, this allowed me to make sure that my connection to the database and authentication was set up correctly.
Next, I converted the CSS over to use Tailwind CSS, this allowed me to better understand the layout of the application and make changes to designs faster and without unexpected consequences.
The original database structure had two collections, users, and tasks, however, for this project, all the information was related to one user.</description></item><item><title>CV Theme</title><link>https://samrobbins.uk/portfolio/cv-theme/</link><pubDate>Sat, 19 Sep 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/cv-theme/</guid><description>For a long time my CV had been produced using LaTeX. This is one of the things LaTeX is designed for as typesetting is very important for a CV. However it had recently been causing frustration as the design wasn&amp;rsquo;t nearly as customisable as the websites I was creating. Also inserting content was tricky as some markup also had to be included, making it more difficult than websites I was producing in Hugo where I could import data from a .</description></item><item><title>DNS Comparison Website</title><link>https://samrobbins.uk/portfolio/dns-comparison-website/</link><pubDate>Thu, 03 Sep 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/dns-comparison-website/</guid><description>This site compares the performance of different DNS services. It does this in a range of ways, depending on your requirements.
Single domain comparison The homepage allows you to compare a single domain to see if it is resolved on different services. To do this it makes DNS over HTTPS requests using Axios, with a modifier to also include the latency.
Bulk domain comparison If you have a list of domains you want to compare, then the above method may become tedious as you have to type in every domain and check the results.</description></item><item><title>Intel vPro Detector</title><link>https://samrobbins.uk/portfolio/intel-vpro-detector/</link><pubDate>Thu, 03 Sep 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/intel-vpro-detector/</guid><description>This tool was produced to detect the presence of Intel vPro and the status of Intel AMT. Intel vPro is a collection of security features included in Intel processors. One of these features is Intel AMT, this allows for remote access from the BIOS level, meaning it can be recovered from more serious failures.
I initially wrote this tool in Golang as a proof of concept. This was functional, but suffered from two major problems.</description></item><item><title>Notes Website</title><link>https://samrobbins.uk/portfolio/notes-website/</link><pubDate>Sun, 30 Aug 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/notes-website/</guid><description>Content format The format I chose for the content is MDX, I had heard good things about it, and used it a bit when contributing to the Vercel documentation. It allows me to use standard markdown syntax but also allows for adding in JSX components. Another benefit is that it uses Remark and Rehype for markdown processing, allowing for the use of the wide range of plugins.
Plugins I use the rehype plugin @mapbox/rehype-prism to add Prism syntax highlighting to the content, I use the prism-atom-dark theme.</description></item><item><title>Remark Admonitions Styles</title><link>https://samrobbins.uk/portfolio/tailwind-remark-admonitions/</link><pubDate>Mon, 17 Aug 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/tailwind-remark-admonitions/</guid><description>This was a small project I produced while working on my university notes website. The problem I was facing is that the new CSS for remark admonitions is produced with Infima, a CSS framework only used by Docusaurus. My aim was to build these same styles using Tailwind CSS, a much more popular framework, and one that allows compiling to raw CSS.
I did this for the classic style and like how they look, however I decided to move to a solution built with React components and so didn&amp;rsquo;t progress to make more styles, but I may in the future.</description></item><item><title>Easy DMARC</title><link>https://samrobbins.uk/portfolio/easy-dmarc/</link><pubDate>Sat, 08 Aug 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/easy-dmarc/</guid><description>About This application sets up DMARC on your Vercel domains, and in the process also sets up SPF. In combination, these secure your domain by protecting you from fraud as it is much more difficult for people to send emails pretending to be your domain.
The impact of this for domain owners is that people won&amp;rsquo;t regard emails from them as spam if criminals are sending fraudulent emails pretending to be them.</description></item><item><title>Hugo Portfolio Website</title><link>https://samrobbins.uk/portfolio/hugo-portfolio-website/</link><pubDate>Fri, 19 Jun 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/hugo-portfolio-website/</guid><description>I created my portfolio website using Hugo and UIKit, it serves as an online resume containing all my work.
This has been created as a theme so that others can use and adapt it.
Sections Homepage Homepage Screenshot The homepage provides the basic information about you, including links to social media, skills you have, things you&amp;rsquo;ve done and your education. This page makes good use of UIKit grid and cards for organising all the information and ensuring it is responsive to work on mobile devices.</description></item><item><title>Oxford Digithon</title><link>https://samrobbins.uk/portfolio/oxford-digithon/</link><pubDate>Sat, 30 May 2020 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/oxford-digithon/</guid><description>For this project we created a web browser extension designed to make you less productive. It did this by making productive websites difficult to use and directing you away from them. You can see our demonstration video here:
This was created using the WebExtensions API so should be compatible with browsers other than Mozilla Firefox, but all our testing was done on that.
Installation To install, first download the project from the GitHub linked at the top of the page</description></item><item><title>Durhack 2019</title><link>https://samrobbins.uk/portfolio/durhack-2019/</link><pubDate>Wed, 01 Jan 2020 15:19:11 +0000</pubDate><guid>https://samrobbins.uk/portfolio/durhack-2019/</guid><description>Our project was to build a tool to help people with dementia remember things, this is implemented in various ways, as described below.
Capital One For this, we used the Capital One API to model new transactions coming in and checking if repeat payments are being made. This is done by checking the location and cost of the payment against the previous payments. The reason why this would be useful is that for people with dementia they may forget that they have already bought things, and so buy it again, wasting money.</description></item><item><title>Slate my doggo</title><link>https://samrobbins.uk/portfolio/slate-my-doggo/</link><pubDate>Wed, 01 May 2019 23:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/slate-my-doggo/</guid><description>This site has a simple user interface with two buttons. The show me a random doggo button will select a random image, and the associated comments. The gimme more doggos button fetches new images using the Reddit API.
API A REST API was implemented to allow for interfacing with the backend. The API was implemented with three functions
List This is a GET request which will give you the JSON of an image with the appropriate links</description></item><item><title>p5 Component</title><link>https://samrobbins.uk/portfolio/p5-component/</link><pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate><guid>https://samrobbins.uk/portfolio/p5-component/</guid><description>In this coursework we were to take a p5 sketch from https://www.openprocessing.org/ and adapt it into a reusable component. For this I used the sketch https://www.openprocessing.org/sketch/429506. It looks like this:
Running This only needs an internet connection to request the various libraries involved, it can be ran by just opening the HTML file in your browser
Example functions Setup function setup() { createCanvas(windowWidth, windowHeight); rectMode(CENTER); textAlign(CENTER); textSize(14); colorMode(HSB); } Draw function draw() { let b = new shape(); b.</description></item></channel></rss>